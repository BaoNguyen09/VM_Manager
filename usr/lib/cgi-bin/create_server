#! /usr/bin/python3

import cgi
import os
import config
from pydo import Client
from utils import *

config_commands = """#cloud-config
    runcmd:
        - apt update
        - apt install apache2 -y
        - systemctl enable apache2
        - systemctl start apache2
"""

def create_server(user: str, desc: str) -> int:
    try:
        if (user == "" and desc is None):
            raise ValueError("Fields 'user' (str) and 'desc' (str) are required")
        
        client = Client(token=config.DO_API_TOKEN)

        req = {
            "name": f"{user}-server",
            "region": "sfo3",
            "size": "s-1vcpu-1gb",
            "image": "ubuntu-22-04-x64",
            "ssh_keys": [
                config.DO_SSH_KEY_ID,
                config.DO_SSH_KEY_FINGER_PRINT
            ],
            "backups": False,
            "ipv6": True,
            "monitoring": True,
            "user_data": config_commands
        }

        resp = client.droplets.create(body=req)
        if "droplet" not in resp: # this means status code is non-200
            print_status_500(resp["message"])
            return
        
        return resp["droplet"]["id"]

    except ValueError as e:
        print_status_400(str(e))

def add_server_to_db(user: str, desc: str, instance_id: int, ready: bool):
    try:
        db = get_db_connection()
        cursor = db.cursor()
        # Insert into servers table
        cursor.execute("INSERT INTO servers (owner, description, instance_id, ready) VALUES (%s, %s, %s, %s);", 
                       (user, desc, instance_id, ready))
        new_server_id = cursor.lastrowid # id of new row created in MySQL table
        db.commit()
        cursor.close()
        db.close()

        # run background script
        os.system(f"./monitor_new_VM {instance_id} {new_server_id} 1>/dev/null 2>/dev/null &")

        print_redirect_300("cgi-bin/home")

    except Exception as e:
        print_status_500(str(e))

def main():
    # extract basic request info
    request_method = os.environ["REQUEST_METHOD"]
    extra_path = os.environ.get("PATH_INFO", "").lstrip("/")
    if request_method == "POST" or request_method == "GET": # read query parameter case of GET/POST method
        form = cgi.FieldStorage()
        # Get user field from cookie
        user = get_authenticated_user()
        if not user: # Redirect to login
            print_redirect_300("login.html")
            return
        # Get desc field from query param
        desc = form.getvalue("desc", None)
        droplet_id = create_server(user, desc)

        if droplet_id:
            add_server_to_db(user, desc, droplet_id, False)
    else:
        print_status_405(extra_path, request_method)
    
if __name__ == "__main__":
    main()


